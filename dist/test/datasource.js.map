{"version":3,"sources":["../../src/datasource.js"],"names":["GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","selectMenu","metricValue","metricColumn","whereSuggest","options","console","log","targets","query","buildQueryParameters","filter","t","hide","length","when","data","datasourceRequest","method","headers","then","response","status","message","title","replace","annotation","annotationQuery","range","datasource","enable","iconColor","rangeRaw","result","target","interpolated","a","mapToTextValue","series","r","parentIndex","index","like_field","callback","meta_field","whereClauseGroup","left","mapToArray","Promise","resolve","reject","map","d","i","text","value","isObject","metric_array","rawQuery","seriesName","metricValues_array","aggregator","percentileValue","groupby_field","outerGroupOperator","j","inlineGroupOperator","op","right","refId","alias","target_alias"],"mappings":";;;;;;;;;AAAA;;;;;;;;IAEaA,iB,WAAAA,iB;AAEX,6BAAYC,gBAAZ,EAA8BC,EAA9B,EAAkCC,UAAlC,EAA8CC,WAA9C,EAA2D;AAAA;;AACzD,SAAKC,IAAL,GAAYJ,iBAAiBI,IAA7B;AACA,SAAKC,GAAL,GAAWL,iBAAiBK,GAA5B;AACA,SAAKC,IAAL,GAAYN,iBAAiBM,IAA7B;AACA,SAAKC,CAAL,GAASN,EAAT;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKK,UAAL,GAAkB,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAlB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,IAAkB,EAArC;AACA,SAAKC,YAAL,GAAmB,KAAKA,YAAL,IAAmB,EAAtC;AACA,SAAKC,YAAL,GAAmB,EAAnB;AACD;;;;0BAEKC,O,EAAS;AACbC,cAAQC,GAAR,CAAYF,QAAQG,OAApB;AACA;AACA;AACA;AACA,UAAIC,QAAQ,KAAKC,oBAAL,CAA0BL,OAA1B,CAAZ;AACAC,cAAQC,GAAR,CAAYE,KAAZ;AACAA,YAAMD,OAAN,GAAgBC,MAAMD,OAAN,CAAcG,MAAd,CAAqB;AAAA,eAAK,CAACC,EAAEC,IAAR;AAAA,OAArB,CAAhB;;AAEA,UAAIJ,MAAMD,OAAN,CAAcM,MAAd,IAAwB,CAA5B,EAA+B;AAC7B,eAAO,KAAKd,CAAL,CAAOe,IAAP,CAAY,EAACC,MAAM,EAAP,EAAZ,CAAP;AACD;;AAED,aAAO,KAAKrB,UAAL,CAAgBsB,iBAAhB,CAAkC;AACvCnB,aAAK,KAAKA,GAAL,GAAW,QADuB;AAEvCkB,cAAMP,KAFiC;AAGvCS,gBAAQ,MAH+B;AAIvCC,iBAAS,EAAE,gBAAgB,kBAAlB;AAJ8B,OAAlC,CAAP;AAMD;;;qCAEgB;AACf,aAAO,KAAKxB,UAAL,CAAgBsB,iBAAhB,CAAkC;AACvCnB,aAAK,KAAKA,GAAL,GAAW,GADuB;AAEvCoB,gBAAQ;AAF+B,OAAlC,EAGJE,IAHI,CAGC,oBAAY;AAClB,YAAIC,SAASC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,iBAAO,EAAEA,QAAQ,SAAV,EAAqBC,SAAS,wBAA9B,EAAwDC,OAAO,SAA/D,EAAP;AACD;AACF,OAPM,CAAP;AAQD;;;oCAEenB,O,EAAS;AACvB,UAAII,QAAQ,KAAKb,WAAL,CAAiB6B,OAAjB,CAAyBpB,QAAQqB,UAAR,CAAmBjB,KAA5C,EAAmD,EAAnD,EAAuD,MAAvD,CAAZ;AACA,UAAIkB,kBAAkB;AACpBC,eAAOvB,QAAQuB,KADK;AAEpBF,oBAAY;AACV3B,gBAAMM,QAAQqB,UAAR,CAAmB3B,IADf;AAEV8B,sBAAYxB,QAAQqB,UAAR,CAAmBG,UAFrB;AAGVC,kBAAQzB,QAAQqB,UAAR,CAAmBI,MAHjB;AAIVC,qBAAW1B,QAAQqB,UAAR,CAAmBK,SAJpB;AAKVtB,iBAAOA;AALG,SAFQ;AASpBuB,kBAAU3B,QAAQ2B;AATE,OAAtB;;AAYA,aAAO,KAAKrC,UAAL,CAAgBsB,iBAAhB,CAAkC;AACvCnB,aAAK,KAAKA,GAAL,GAAW,cADuB;AAEvCoB,gBAAQ,MAF+B;AAGvCF,cAAMW;AAHiC,OAAlC,EAIJP,IAJI,CAIC,kBAAU;AAChB,eAAOa,OAAOjB,IAAd;AACD,OANM,CAAP;AAOD;;;qCAEgBX,O,EAAS;AACxB,UAAI6B,SAAS,OAAQ7B,OAAR,KAAqB,QAArB,GAAgCA,OAAhC,GAA0C,aAAvD;AACA,UAAI8B,eAAe;AACfD,gBAAQ,KAAKtC,WAAL,CAAiB6B,OAAjB,CAAyBS,MAAzB,EAAiC,IAAjC,EAAuC,OAAvC;AADO,OAAnB;AAGD;AACC,UAAIE,IAAK,KAAKzC,UAAL,CAAgBsB,iBAAhB,CAAkC;AACzCnB,aAAK,KAAKA,GAAL,GAAW,UADyB;AAEzCkB,cAAMmB,YAFmC;AAGzCjB,gBAAQ,MAHiC;AAIzCC,iBAAS,EAAE,gBAAgB,kBAAlB;AAJgC,OAAlC,EAKNC,IALM,CAKD,KAAKiB,cALJ,CAAT;AAMH,aAAOD,CAAP;AACE;;;sCAEiB/B,O,EAAS;AACzB,UAAI6B,SAAS,OAAQ7B,OAAR,KAAqB,QAArB,GAAgCA,OAAhC,GAA0CA,QAAQiC,MAA/D;AACA,UAAIH,eAAe;AACfD,gBAAQ,KAAKtC,WAAL,CAAiB6B,OAAjB,CAAyBS,MAAzB,EAAiC,IAAjC,EAAuC,OAAvC;AADO,OAAnB;AAGA5B,cAAQC,GAAR,CAAY4B,YAAZ;AACA,UAAII,IAAI,KAAK5C,UAAL,CAAgBsB,iBAAhB,CAAkC;AACxCnB,aAAK,KAAKA,GAAL,GAAW,UADwB;AAExCkB,cAAMmB,YAFkC;AAGxCjB,gBAAQ,MAHgC;AAIxCC,iBAAS,EAAE,gBAAgB,kBAAlB;AAJ+B,OAAlC,EAKLC,IALK,CAKA,KAAKiB,cALL,CAAR;AAMH;;;;;AAKA,aAAOE,CAAP;AACE;;;oCAEelC,O,EAAQmC,W,EAAYC,K,EAAOC,U,EAAYC,Q,EAAS;AACjE,UAAIT,SAAS,OAAQ7B,OAAR,KAAqB,QAArB,GAAgCA,OAAhC,GAA0CA,QAAQiC,MAA/D;AACA,UAAIM,aAAavC,QAAQwC,gBAAR,CAAyBL,WAAzB,EAAsCC,KAAtC,EAA6CK,IAA9D;AACA;AACG,UAAIX,eAAe;AACfD,gBAAQ,KAAKtC,WAAL,CAAiB6B,OAAjB,CAAyBS,MAAzB,EAAiC,IAAjC,EAAuC,OAAvC,CADO;AAEtBU,oBAAY,KAAKhD,WAAL,CAAiB6B,OAAjB,CAAyBmB,UAAzB,EAAqC,IAArC,EAA2C,OAA3C,CAFU;AAGtBF,oBAAY,KAAK9C,WAAL,CAAiB6B,OAAjB,CAAyBiB,UAAzB,EAAqC,IAArC,EAA2C,OAA3C;AAHU,OAAnB;AAKApC,cAAQC,GAAR,CAAY4B,YAAZ;AACA,UAAII,IAAK,KAAK5C,UAAL,CAAgBsB,iBAAhB,CAAkC;AACzCnB,aAAK,KAAKA,GAAL,GAAW,UADyB;AAEzCkB,cAAMmB,YAFmC;AAGzCjB,gBAAQ,MAHiC;AAIzCC,iBAAS,EAAE,gBAAgB,kBAAlB;AAJgC,OAAlC,EAKNC,IALM,CAKD,KAAK2B,UALJ,EAKgB3B,IALhB,CAKqBuB,QALrB,CAAT;AAMH;;;;;AAKA,aAAOJ,CAAP;AACE;;;qCAEgBlC,O,EAAS;AACxB,UAAI6B,SAAS,OAAQ7B,OAAR,KAAqB,QAArB,GAAgCA,OAAhC,GAA0CA,QAAQiC,MAA/D;AACA,UAAIH,eAAe;AACfD,gBAAQ,KAAKtC,WAAL,CAAiB6B,OAAjB,CAAyBS,MAAzB,EAAiC,IAAjC,EAAuC,OAAvC;AADO,OAAnB;AAGA5B,cAAQC,GAAR,CAAY4B,YAAZ;AACA,UAAII,IAAK,KAAK5C,UAAL,CAAgBsB,iBAAhB,CAAkC;AACzCnB,aAAK,KAAKA,GAAL,GAAW,UADyB;AAEzCkB,cAAMmB,YAFmC;AAGzCjB,gBAAQ,MAHiC;AAIzCC,iBAAS,EAAE,gBAAgB,kBAAlB;AAJgC,OAAlC,EAKNC,IALM,CAKD,KAAKiB,cALJ,CAAT;AAMH;;;;AAIA,aAAOE,CAAP;AACE;;;mCACc;;AAEhB,UAAIA,IAAK,IAAIS,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAC9C,YAAId,IAAI,EAAC,QAAO,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAR,EAAuB,UAAS,GAAhC,EAAqC,cAAa,IAAlD,EAAR;AACOa,gBAAQb,CAAR;AACP,OAHQ,EAGNhB,IAHM,CAGD,KAAKiB,cAHJ,CAAT;AAIA,aAAOE,CAAP;AACC;;;mCACeN,M,EAAQ;AACrB,UAAIG,IAAK,iBAAEe,GAAF,CAAMlB,OAAOjB,IAAb,EAAmB,UAACoC,CAAD,EAAIC,CAAJ,EAAU;AACpC,YAAID,KAAKA,EAAEE,IAAP,IAAeF,EAAEG,KAArB,EAA4B;AAC1B,iBAAO,EAAED,MAAMF,EAAEE,IAAV,EAAgBC,OAAOH,EAAEG,KAAzB,EAAP;AACD,SAFD,MAEO,IAAI,iBAAEC,QAAF,CAAWJ,CAAX,CAAJ,EAAmB;AACxB,iBAAO,EAAEE,MAAMF,CAAR,EAAWG,OAAOF,CAAlB,EAAP;AACD;AACD,eAAO,EAAEC,MAAMF,CAAR,EAAWG,OAAOH,CAAlB,EAAP;AACD,OAPQ,CAAT;AAQH,aAAOhB,CAAP;AACE;;;+BAESH,M,EAAO;AAClB,aAAOA,OAAOjB,IAAd;AACC;;;mCAEeiB,M,EAAQ;AACrB,WAAK/B,WAAL,GAAmB+B,OAAOjB,IAA1B;AACAV,cAAQC,GAAR,CAAY,KAAKL,WAAjB;AACD;;;yCAEoBG,O,EAAS;AAC5B;AACAA,cAAQG,OAAR,GAAkB,iBAAEG,MAAF,CAASN,QAAQG,OAAjB,EAA0B,kBAAU;AACpD,eAAO0B,OAAOA,MAAP,KAAkB,eAAzB;AACD,OAFiB,CAAlB;AAGA5B,cAAQC,GAAR,CAAYF,QAAQG,OAAR,CAAgBiD,YAA5B;;AAEH,UAAIhD,QAAQ,iBAAE0C,GAAF,CAAM9C,QAAQG,OAAd,EAAuB,UAAS0B,MAAT,EAAiB;AACnD5B,gBAAQC,GAAR,CAAY2B,OAAOwB,QAAnB;;AAEA,YAAGxB,OAAOwB,QAAV,EAAmB;AAClB,cAAIjD,QAAQyB,OAAOA,MAAnB;AACA,iBAAOzB,KAAP;AACA,SAHD,MAMI;AACH,cAAIA,QAAQ,MAAZ;AACA,cAAIkD,aAAazB,OAAOI,MAAxB;AACA,eAAI,IAAIG,QAAQ,CAAhB,EAAoBA,QAAQP,OAAOuB,YAAP,CAAoB3C,MAAhD,EAAwD2B,OAAxD,EAAgE;AAC/DhC,qBAAQ,MAAIyB,OAAOuB,YAAP,CAAoBhB,KAApB,CAAZ;AACA,gBAAKA,QAAM,CAAN,IAAWP,OAAOuB,YAAP,CAAoB3C,MAApC,EAA2C;AAC1C;AACA;AACDL,qBAAO,GAAP;AACA;AACDH,kBAAQC,GAAR,CAAYE,KAAZ;;AAEA,eAAI,IAAIgC,QAAQ,CAAhB,EAAoBA,QAAQP,OAAO0B,kBAAP,CAA0B9C,MAAtD,EAA8D2B,OAA9D,EAAsE;AAChDhC,qBAAQ,wBAAsByB,OAAO0B,kBAAP,CAA0BnB,KAA1B,CAAtB,GAAuD,eAA/D;AACrB,gBAAGP,OAAO2B,UAAP,CAAkBpB,KAAlB,KAA0B,YAA7B,EAA2ChC,SAAQyB,OAAO2B,UAAP,CAAkBpB,KAAlB,IAAyB,GAAzB,GAA6BP,OAAO4B,eAAP,CAAuBrB,KAAvB,CAA7B,GAA2D,IAAnE,CAA3C,KACKhC,SAAQyB,OAAO2B,UAAP,CAAkBpB,KAAlB,IAAyB,GAAjC;AACS;AACDnC,kBAAQC,GAAR,CAAYE,KAAZ;;AAEdA,mBAAQ,wBAAR;AACA,cAAIyB,OAAO6B,aAAP,IAAwB,GAA5B,EAAiC;AAClBtD,qBAAS,SAASyB,OAAO6B,aAAzB;AACA;AACRtD,mBAAS,WAAWkD,UAApB;AACNlD,mBAAS,SAAT;AACA,eAAI,IAAI4C,IAAE,CAAV,EAAaA,IAAEnB,OAAOW,gBAAP,CAAwB/B,MAAvC,EAA+CuC,GAA/C,EACA;AACC,gBAAGA,IAAE,CAAL,EAAQ5C,SAAQ,MAAKyB,OAAO8B,kBAAP,CAA0BX,CAA1B,CAAL,GAAkC,GAA1C;AACR5C,qBAAQ,KAAR;AACA,iBAAI,IAAIwD,IAAG,CAAX,EAAeA,IAAE/B,OAAOW,gBAAP,CAAwBQ,CAAxB,EAA2BvC,MAA5C,EAAoDmD,GAApD,EAAwD;AACvD,kBAAGA,IAAE,CAAL,EAAQxD,QAAQA,QAAO,GAAP,GAAWyB,OAAOgC,mBAAP,CAA2Bb,CAA3B,EAA8BY,CAA9B,CAAX,GAA4C,GAApD;AACHxD,uBAASyB,OAAOW,gBAAP,CAAwBQ,CAAxB,EAA2BY,CAA3B,EAA8BnB,IAA9B,GAAmC,GAAnC,GAAuCZ,OAAOW,gBAAP,CAAwBQ,CAAxB,EAA2BY,CAA3B,EAA8BE,EAArE,GAAwE,KAAxE,GAA8EjC,OAAOW,gBAAP,CAAwBQ,CAAxB,EAA2BY,CAA3B,EAA8BG,KAA5G,GAAkH,IAA3H;AACL;AACD3D,qBAAQ,IAAR;AACA;;AAEFyB,iBAAOA,MAAP,GAAgBzB,KAAhB;AACA,iBAAOA,KAAP;AACA;AACD,OAhDW,CAAZ;;AAkDG,UAAID,UAAU,iBAAE2C,GAAF,CAAM9C,QAAQG,OAAd,EAAuB,kBAAU;AAClDF,gBAAQC,GAAR,CAAY2B,MAAZ;AACK,eAAO;AACL;AACAA,kBAAQzB,MAAM,CAAN,CAFH;AAGL4D,iBAAOnC,OAAOmC,KAHT;AAILxD,gBAAMqB,OAAOrB,IAJR;AAKLhB,gBAAMqC,OAAOrC,IAAP,IAAe,WALhB;AAMZyE,iBAAQpC,OAAOqC;AANH,SAAP;AAQD,OAVa,CAAd;;AAYAlE,cAAQG,OAAR,GAAkBA,OAAlB;AACAF,cAAQC,GAAR,CAAYF,QAAQG,OAApB;AACA,aAAOH,OAAP;AACD","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.selectMenu = ['=','>','<'];\n    this.metricValue = this.metricValue||[];\n    this.metricColumn =this.metricColumn||[];\n    this.whereSuggest =[];\n  }\n\n  query(options) {\n    console.log(options.targets);\n    //console.log(ctrl.metric_array);\n    //var my_tar = options.target[0];\n    //console.log(my_tar);\n    var query = this.buildQueryParameters(options); \n    console.log(query);\n    query.targets = query.targets.filter(t => !t.hide);\n\n    if (query.targets.length <= 0) {\n      return this.q.when({data: []});\n    }\n\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/query',\n      data: query,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n\n  testDatasource() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/',\n      method: 'GET'\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n  annotationQuery(options) {\n    var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\n    var annotationQuery = {\n      range: options.range,\n      annotation: {\n        name: options.annotation.name,\n        datasource: options.annotation.datasource,\n        enable: options.annotation.enable,\n        iconColor: options.annotation.iconColor,\n        query: query\n      },\n      rangeRaw: options.rangeRaw\n    };\n\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/annotations',\n      method: 'POST',\n      data: annotationQuery\n    }).then(result => {\n      return result.data;\n    });\n  }\n\n  metricFindTables(options) {\n    var target = typeof (options) === \"string\" ? options : \"Find tables\";\n    var interpolated = {\n        target: this.templateSrv.replace(target, null, 'regex')\n    };\n   //console.log(interpolated);\n    var a =  this.backendSrv.datasourceRequest({\n      url: this.url + '/searchT',\n      data: interpolated,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    }).then(this.mapToTextValue);\n\treturn a;\n  }\n\n  metricFindColumns(options) {\n    var target = typeof (options) === \"string\" ? options : options.series;\n    var interpolated = {\n        target: this.templateSrv.replace(target, null, 'regex')\n    };\n    console.log(interpolated);\n    var r = this.backendSrv.datasourceRequest({\n      url: this.url + '/searchC',\n      data: interpolated,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    }).then(this.mapToTextValue);\n\t/*.then(function(result){\n        this.metricColumn = result.data;\n        console.log(this.metricColumn);\n        }.bind(this));\n\t*/\n\treturn r;\n  }\n\n  findWhereFields(options,parentIndex,index, like_field, callback){\n\tvar target = typeof (options) === \"string\" ? options : options.series;\n\tvar meta_field = options.whereClauseGroup[parentIndex][index].left;\n\t//var like_field = options.whereClauseGroup[parentIndex][index].right;\n    var interpolated = {\n        target: this.templateSrv.replace(target, null, 'regex'),\n\tmeta_field: this.templateSrv.replace(meta_field, null, 'regex'),\n\tlike_field: this.templateSrv.replace(like_field, null, 'regex')\n    };\n    console.log(interpolated);\n    var r =  this.backendSrv.datasourceRequest({\n      url: this.url + '/searchW',\n      data: interpolated,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    }).then(this.mapToArray).then(callback);\n\t/*.then(function(result){\n        this.whereSuggest = result.data;\n        console.log(this.whereSuggest);\n\treturn this.whereSuggest;\n        }.bind(this));*/\n\treturn r;\n  }\n\n  metricFindValues(options) {\n    var target = typeof (options) === \"string\" ? options : options.series;\n    var interpolated = {\n        target: this.templateSrv.replace(target, null, 'regex')\n    };\n    console.log(interpolated);\n    var r =  this.backendSrv.datasourceRequest({\n      url: this.url + '/searchV',\n      data: interpolated,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    }).then(this.mapToTextValue);\n\t/*then(function(result){\n\tthis.metricValue = result.data;\n\tconsole.log(this.metricValue);\n\t}.bind(this)); */\n\treturn r;\n  }\n   findOperator(){\n\n\tvar r =  new Promise(function(resolve, reject) {\n\t\tvar a = {\"data\":['=','<','>'], \"status\":200, \"statusText\":\"OK\"};\n\t        resolve(a);\n\t}).then(this.mapToTextValue);\n\treturn r;\n\t}\n  mapToTextValue(result) {\n    var a =  _.map(result.data, (d, i) => {\n      if (d && d.text && d.value) {\n        return { text: d.text, value: d.value };\n      } else if (_.isObject(d)) {\n        return { text: d, value: i};\n      }\n      return { text: d, value: d };\n    });\n\treturn a;\n  }\n\n mapToArray(result){\n\treturn result.data;\n\t}\n\n  mapToListValue(result) {\n    this.metricValue = result.data;\n    console.log(this.metricValue);\n  }\n\n  buildQueryParameters(options) {\n    //remove placeholder targets\n    options.targets = _.filter(options.targets, target => {\n      return target.target !== 'select metric';\n    });\n    console.log(options.targets.metric_array);\n\n\tvar query = _.map(options.targets, function(target) {\n\t\tconsole.log(target.rawQuery);\n\n\t\tif(target.rawQuery){\n\t\t\tvar query = target.target;\n\t\t\treturn query;\n\t\t}\n\t\t\n\n\t\telse{\n\t\t\tvar query = 'get ';\n\t\t\tvar seriesName = target.series;\n\t\t\tfor(var index = 0 ; index < target.metric_array.length; index++){\n\t\t\t\tquery+= ' '+target.metric_array[index];\n\t\t\t\tif ( index+1 == target.metric_array.length){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tquery+=',';\n\t\t\t}\t\t\n\t\t\tconsole.log(query);\n\n\t\t\tfor(var index = 0 ; index < target.metricValues_array.length; index++){\n                        \tquery+= ', aggregate(values.'+target.metricValues_array[index]+', $quantify, ';\n\t\t\t\tif(target.aggregator[index]==\"percentile\") query+= target.aggregator[index]+'('+target.percentileValue[index]+'))';\n\t\t\t\telse query+= target.aggregator[index]+')'; \n                \t}\n                \tconsole.log(query);\n\t\t\n\t\t\tquery+= ' between ($START,$END)';\n\t\t\tif (target.groupby_field != \" \") {\n                \t\tquery += ' by ' + target.groupby_field;\n                \t}\n        \t\tquery += ' from ' + seriesName;\n\t\t\t\tquery += \" where \";\n\t\t\t\tfor(var i=0; i<target.whereClauseGroup.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif(i>0) query +=\" \"+ target.outerGroupOperator[i]+\" \";\n\t\t\t\t\tquery +=\" ( \";\n\t\t\t\t\tfor(var j =0 ; j<target.whereClauseGroup[i].length; j++){\n\t\t\t\t\t\tif(j>0) query = query +\" \"+target.inlineGroupOperator[i][j]+\" \";\n     \t\t\t\t\t\tquery += target.whereClauseGroup[i][j].left+\" \"+target.whereClauseGroup[i][j].op+\" \\\"\"+target.whereClauseGroup[i][j].right+\"\\\"\";\n\t\t\t\t\t}\n\t\t\t\t\tquery +=\" )\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\ttarget.target = query;\n\t\t\treturn query;\n\t\t}\n\t}); \n\n    var targets = _.map(options.targets, target => {\n\tconsole.log(target);\n      return {\n        //target: this.templateSrv.replace(target.target),\n        target: query[0],\n        refId: target.refId,\n        hide: target.hide,\n        type: target.type || 'timeserie',\n\talias : target.target_alias\n      };\n    });\n    \n    options.targets = targets;\n    console.log(options.targets);\n    return options;\n  }\n}\n"]}