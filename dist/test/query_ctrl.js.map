{"version":3,"sources":["../../src/query_ctrl.js"],"names":["GenericDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","scope","target","series","type","condition","groupby_field","segments","valueSegments","metric_array","metricValues_array","target_alias","whereClause","whereClauseGroup","operator","selectMenu","wName","whereGroup","push","console","log","a","datasource","findOperator","metricFindColumns","then","transformToSegments","metricFindValues","$$state","metricFindTables","index","panelCtrl","refresh","findWhereFields","rawQuery","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, uiSegmentSrv)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.target.series = this.target.series||'select table';\n    this.target.type = this.target.type || 'timeserie';\n    this.target.condition = this.target.condition||[];\n    this.target.groupby_field = this.target.groupby_field || ' '; \n    this.target.segments = this.target.segments||[];\n    this.target.valueSegments =this.target.valueSegments||[];\n    this.target.metric_array = this.target.metric_array||['Select Metric'];\n    this.target.metricValues_array = this.target.metricValues_array ||['Select Metric Value'];\n    this.target.target_alias = this.target.target_alias||\"\";\n    this.target.whereClause = this.target.whereClause||['Select Metric'];\n    this.target.whereClauseGroup = this.target.whereClauseGroup||[this.target.whereClause];\n    //this.target.operator = ['=', '>', '<', '!~', '<>','Like','Not Like'];\n    this.target.operator = this.target.operator||[\"=\"];\n    this.selectMenu = [{'text':'=' , \"value\": \"=\"}];\n    this.target.wName = [\"Aida\", \"Aidan\", \"Alla\", \"Allen\", \"Beverly\", \"Bea\", \"Caleb\",\"Catherine\",\"false\"];\n    this.target.whereGroup = this.target.whereGroup||[\"AND\"];\n  }\n\n  addWhereClause(){\n\t\tthis.target.whereClause.push('Select Metric Value');\n                console.log(this.target.metricValues_array);\n\n  \t}\n  addWhereClauseGroup(){\n                this.target.whereClauseGroup.push([]);\n                console.log(this.target.metricValues_array);\n\n        }\n\n\n    getOperator(){              \n       var a = this.datasource.findOperator();\n\treturn a;\n\t//.then(this.uiSegmentSrv.transformToSegments(false));\n\t\n\t}\t\n  addSegments(){\n\t\tthis.target.metric_array.push('Select Metric');\n\t\tconsole.log(this.target.metric_array);\n\t}\n\n  addValueSegments(){\n                this.target.metricValues_array.push('Select Metric Value');\n                console.log(this.target.metricValues_array);\n        }\n  getColumns() {\n\tconsole.log(\"I am in get Columns\");\n\tconsole.log(this.target);\n    return this.datasource.metricFindColumns(this.target)\n      .then(this.uiSegmentSrv.transformToSegments(false));\n  }\n\n  getMetricValues() {\n        console.log(\"I am in get Metric Values\");\n        console.log(this.target);\n    var a = this.datasource.metricFindValues(this.target);\n\tconsole.log(a.$$state);\n\treturn a;\n      //.then(this.uiSegmentSrv.transformToSegments(false));\n       }\n\n\n\n getTableNames() {\n        console.log(\"I am in get Table Names\");\n        console.log(this.target);\n    return  this.datasource.metricFindTables(this.target)\n      .then(this.uiSegmentSrv.transformToSegments(false));\n        }\n\n getWhereFields(index){\n\tthis.panelCtrl.refresh();\n\tconsole.log(\"I am in get Table Names\");\n        console.log(this.target);\n    \treturn this.datasource.findWhereFields(this.target,index)\n      .then(this.uiSegmentSrv.transformToSegments(false));\n        }\n\n myFunc(){\n\tconsole.log(\"I am in my Func\");\n        console.log(this.target);\n\t}\n\n  toggleEditorMode() {\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n\n onChangeInternal() {\n\tthis.target.metric_array = ['Select Metric'];\n        this.target.metricValues_array = ['Select Matric Value'];\n       console.log(this.target);\n     }\n\n\n\n \n}\n\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}