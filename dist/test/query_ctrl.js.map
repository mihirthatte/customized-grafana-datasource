{"version":3,"sources":["../../src/query_ctrl.js"],"names":["GenericDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","scope","target","series","type","condition","groupby_field","segments","valueSegments","metric_array","metricValues_array","target_alias","push","name","console","log","datasource","metricFindColumns","then","transformToSegments","metricFindValues","metricFindTables","rawQuery","param","index","metric","metricValues","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, uiSegmentSrv)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.target.series = this.target.series||'select table';\n    this.target.type = this.target.type || 'timeserie';\n    this.target.condition = this.target.condition || ' ';\n    this.target.groupby_field = this.target.groupby_field || ' '; \n    this.target.segments = this.target.segments||[];\n    this.target.valueSegments =this.target.valueSegments||[];\n    this.target.metric_array = this.target.metric_array||['Select Metric'];\n    this.target.metricValues_array = this.target.metricValues_array ||['Select Metric Value'];\n    this.target.target_alias = this.target.target_alias||\"\";\n    \n  }\n\t\n  addSegments(){\n\t\tthis.target.segments.push({name:'Select Metric'});\n\t\tconsole.log(this.target.segments);\n\t}\n\n  addValueSegments(){\n                this.target.valueSegments.push({name:'Select Metric Value'});\n                console.log(this.target.valueSegments);\n        }\n  getColumns() {\n\tconsole.log(\"I am in get Columns\");\n\tconsole.log(this.target);\n    return this.datasource.metricFindColumns(this.target)\n      .then(this.uiSegmentSrv.transformToSegments(false));\n  }\n\n  getMetricValues() {\n        console.log(\"I am in get Metric Values\");\n        console.log(this.target);\n    return this.datasource.metricFindValues(this.target)\n      .then(this.uiSegmentSrv.transformToSegments(false));\n       }\n\n\n\n getTableNames() {\n        console.log(\"I am in get Table Names\");\n        console.log(this.target);\n    return this.datasource.metricFindTables(this.target)\n      .then(this.uiSegmentSrv.transformToSegments(false));\n        }\n\t\n\n\n  toggleEditorMode() {\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  onChangeInternal(param, index) {\n    console.log(index);\n\t\n    if(param == 'table'){\n\tthis.target.metric_array = [];\n        this.target.metricValues_array = [];\n    }\n    \n    else if (param == 'metric'){\n    \tif (this.target.metric != 'select metric'){\n\t\tif(this.target.metric_array[index]){\n\t\t\tthis.target.metric_array[index] = this.target.metric;\n\t\t}\n\t\telse {\n    \t\t\tthis.target.metric_array.push(this.target.metric);\n\t\t}\n    \t}\n    }\n\n   else if(param == 'values'){\n   \tif (this.target.metricValues != 'select metric Value'){\n\t\tif(this.target.metricValues_array[index]){\n\t\t\tthis.target.metricValues_array[index] = this.target.metricValues;\n\t\t}\n\t\telse { \n        \t\tthis.target.metricValues_array.push(this.target.metricValues);\n\t\t}\n    \t}\n   }\n    console.log(this.target);\n    //this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n}\n\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}