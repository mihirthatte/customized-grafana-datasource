{"version":3,"sources":["../src/datasource.js"],"names":["_","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","selectMenu","options","console","log","targets","query","buildQueryParameters","filter","t","hide","length","when","data","datasourceRequest","method","headers","then","response","status","message","title","replace","annotation","annotationQuery","range","datasource","enable","iconColor","rangeRaw","result","target","interpolated","a","mapToTextValue","series","parentIndex","index","meta_field","whereClauseGroup","left","r","Promise","resolve","reject","map","d","i","text","value","isObject","metric_array","rawQuery","seriesName","metricValues_array","groupby_field","outerGroupOperator","j","inlineGroupOperator","op","right","refId","alias","target_alias"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.selectMenu = ['=','>','<'];\n  }\n\n  query(options) {\n    console.log(options.targets);\n    //console.log(ctrl.metric_array);\n    //var my_tar = options.target[0];\n    //console.log(my_tar);\n    var query = this.buildQueryParameters(options); \n    console.log(query);\n    query.targets = query.targets.filter(t => !t.hide);\n\n    if (query.targets.length <= 0) {\n      return this.q.when({data: []});\n    }\n\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/query',\n      data: query,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n\n  testDatasource() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/',\n      method: 'GET'\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n  annotationQuery(options) {\n    var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\n    var annotationQuery = {\n      range: options.range,\n      annotation: {\n        name: options.annotation.name,\n        datasource: options.annotation.datasource,\n        enable: options.annotation.enable,\n        iconColor: options.annotation.iconColor,\n        query: query\n      },\n      rangeRaw: options.rangeRaw\n    };\n\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/annotations',\n      method: 'POST',\n      data: annotationQuery\n    }).then(result => {\n      return result.data;\n    });\n  }\n\n  metricFindTables(options) {\n    var target = typeof (options) === \"string\" ? options : \"Find tables\";\n    var interpolated = {\n        target: this.templateSrv.replace(target, null, 'regex')\n    };\n   //console.log(interpolated);\n    var a =  this.backendSrv.datasourceRequest({\n      url: this.url + '/searchT',\n      data: interpolated,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    }).then(this.mapToTextValue);\n\treturn a;\n  }\n\n  metricFindColumns(options) {\n    var target = typeof (options) === \"string\" ? options : options.series;\n    var interpolated = {\n        target: this.templateSrv.replace(target, null, 'regex')\n    };\n    console.log(interpolated);\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/searchC',\n      data: interpolated,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    }).then(this.mapToTextValue);\n  }\n\n  findWhereFields(options,parentIndex,index){\n\tvar target = typeof (options) === \"string\" ? options : options.series;\n\tvar meta_field = options.whereClauseGroup[parentIndex][index].left;\n    var interpolated = {\n        target: this.templateSrv.replace(target, null, 'regex'),\n\tmeta_field: this.templateSrv.replace(meta_field, null, 'regex')\n    };\n    console.log(interpolated);\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/searchW',\n      data: interpolated,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    }).then(this.mapToTextValue);\n  }\n\n  metricFindValues(options) {\n    var target = typeof (options) === \"string\" ? options : options.series;\n    var interpolated = {\n        target: this.templateSrv.replace(target, null, 'regex')\n    };\n    console.log(interpolated);\n    var r =  this.backendSrv.datasourceRequest({\n      url: this.url + '/searchV',\n      data: interpolated,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    }).then(this.mapToTextValue);\n\treturn r;\n  }\n   findOperator(){\n\n\tvar r =  new Promise(function(resolve, reject) {\n\t\tvar a = {\"data\":['=','<','>'], \"status\":200, \"statusText\":\"OK\"};\n\t        resolve(a);\n\t}).then(this.mapToTextValue);\n\treturn r;\n\t}\n  mapToTextValue(result) {\n    var a =  _.map(result.data, (d, i) => {\n      if (d && d.text && d.value) {\n        return { text: d.text, value: d.value };\n      } else if (_.isObject(d)) {\n        return { text: d, value: i};\n      }\n      return { text: d, value: d };\n    });\n\treturn a;\n  }\n\n  buildQueryParameters(options) {\n    //remove placeholder targets\n    options.targets = _.filter(options.targets, target => {\n      return target.target !== 'select metric';\n    });\n    console.log(options.targets.metric_array);\n\n\tvar query = _.map(options.targets, function(target) {\n\t\tconsole.log(target.rawQuery);\n\n\t\tif(target.rawQuery){\n\t\t\tvar query = target.target;\n\t\t\treturn query;\n\t\t}\n\t\t\n\n\t\telse{\n\t\t\tvar query = 'get ';\n\t\t\tvar seriesName = target.series;\n\t\t\tfor(var index = 0 ; index < target.metric_array.length; index++){\n\t\t\t\tquery+= ' '+target.metric_array[index];\n\t\t\t\tif ( index+1 == target.metric_array.length){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tquery+=',';\n\t\t\t}\t\t\n\t\t\tconsole.log(query);\n\n\t\t\tfor(var index = 0 ; index < target.metricValues_array.length; index++){\n                        \tquery+= ' , values.'+target.metricValues_array[index]; \n                \t}\n                \tconsole.log(query);\n\t\t\n\t\t\tquery+= ' between ($START,$END)';\n\t\t\tif (target.groupby_field != \" \") {\n                \t\tquery += ' by ' + target.groupby_field;\n                \t}\n        \t\tquery += ' from ' + seriesName;\n\t\t\t\tquery += \" where \";\n\t\t\t\tfor(var i=0; i<target.whereClauseGroup.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif(i>0) query +=\" \"+ target.outerGroupOperator[i]+\" \";\n\t\t\t\t\tquery +=\" ( \";\n\t\t\t\t\tfor(var j =0 ; j<target.whereClauseGroup[i].length; j++){\n\t\t\t\t\t\tif(j>0) query = query +\" \"+target.inlineGroupOperator[i][j]+\" \";\n     \t\t\t\t\t\tquery += target.whereClauseGroup[i][j].left+\" \"+target.whereClauseGroup[i][j].op+\" \\\"\"+target.whereClauseGroup[i][j].right+\"\\\"\";\n\t\t\t\t\t}\n\t\t\t\t\tquery +=\" )\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\ttarget.target = query;\n\t\t\treturn query;\n\t\t}\n\t}); \n\n    var targets = _.map(options.targets, target => {\n\tconsole.log(target);\n      return {\n        //target: this.templateSrv.replace(target.target),\n        target: query[0],\n        refId: target.refId,\n        hide: target.hide,\n        type: target.type || 'timeserie',\n\talias : target.target_alias\n      };\n    });\n    \n    options.targets = targets;\n    console.log(options.targets);\n    return options;\n  }\n}\n"]}